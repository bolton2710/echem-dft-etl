{"timestamp":"2025-09-01T22:15:13.345347","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-01T22:15:13.345892","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dev.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-01T22:15:14.146864Z","level":"info","event":"Dev analysis","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T22:15:14.474999","level":"info","event":"Done. Returned value was: ('mp-755394-111-3', 0.4660059795100002, 148.52218262949242)","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-09-01T22:15:14.475391","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01990759-3d60-7709-a4f9-6e838409fced'), task_id='analyze_electrochem', dag_id='dev', run_id='manual__2025-09-01T22:15:12.970515+00:00', try_number=1, map_index=-1, hostname='41a82e7e5a55', context_carrier={}, task=<Task(_PythonDecoratedOperator): analyze_electrochem>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 1, 22, 15, 13, 181379, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/dev/runs/manual__2025-09-01T22%3A15%3A12.970515%2B00%3A00/tasks/analyze_electrochem?try_number=1')","logger":"task"}
